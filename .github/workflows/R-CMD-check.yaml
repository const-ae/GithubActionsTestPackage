on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 8 * * 5'

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.image }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }} - ${{ matrix.config.bioc }} - ${{ matrix.config.image }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: macOS-latest, r: '4.0'}
        - { os: macOS-latest, r: 'devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install Mac system libraries
        if: ${{ matrix.config.os == 'macOS-latest' }}
        run: |
          brew install openssl curl

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install remotes
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}


      - name: Install dependencies
        run: |
          install.packages(c('BiocManager', 'rcmdcheck'))
          BiocManager::install(ask = FALSE, update = TRUE)
          toInstall <- remotes::dev_package_deps(dependencies = TRUE)[,'package']
          toInstall <- setdiff(toInstall, installed.packages()[,'Package'])
          if(length(toInstall)) { BiocManager::install(toInstall, ask = FALSE) }
        shell: Rscript {0}

      - name: Run Something
        run: |
          print(3 * 9)
          print("Hello world!!!!!")


      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}


      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash


